<?xml version="1.0" encoding="UTF-8"?>
<moya xmlns="http://moyaproject.com"
    xmlns:let="http://moyaproject.com/let"
    xmlns:db="http://moyaproject.com/db"
    xmlns:forms="http://moyaproject.com/forms"
    xmlns:tl="http://willmcgugan.com/timeline"
    xmlns:fs="http://moyaproject.com/fs">

    <mountpoint name="main">
        <url route="/api/public/" methods="GET,POST" view='#jsonrpc.public' name="jsonrpc_public" />
        <url route="/api/private/" methods="GET,POST" view='#jsonrpc.private' name="jsonrpc_private" />
       
        <url route="/s/{stream_id}/" methods="GET" view="#view.stream" name="stream" />
        <url route="/s/{stream_id}/new-event/" methods="GET,POST" view="#view.stream.upload" name="stream_upload" />
        <url route="/e/{event_id}/" methods="GET" view="#view.event" name="event"/>

        <url route="/" methods="GET" view="#view.timeline" name="user_timeline"/>
        <url route="/{username}/" methods="GET" view="#view.timeline" name="timeline"/>
    </mountpoint>

    <view libname="view.stream" template="stream.html">
        <tl:get-stream-required id=".url.stream_id" dst="stream"/>
        <tl:get-timeline dst="timeline" />
        <get-url name="stream" let:stream_id="stream.uuid" dst="watch_url"/>
        <db:query model="#Event" let:stream="stream" maxresults="10" orderby="-added_time" dst="events"/>


        <db:get model="#Subscription" dst="subscription"
            let:stream="stream" let:timeline="timeline"/>
        
        <dict dst="config"
            let:stream="stream.uuid"
            let:events="sub:'stream-${stream.id}'"
            let:watcherurl="slashjoin:[.app.settings.watcher_url, watch_url]"
            let:time="events.first.time.epoch">
            <get-url name="jsonrpc_private" dst="rpc_url"/>
        </dict>
    </view>

    <view libname="view.stream.upload" content="#content.stream.new_event">
        <forms:get form="#form.event" dst="form"/>
        <forms:validate src="form">
            <let data="form.data"/>
            <tl:get-stream id="data.stream" dst="stream"/>
            <db:create model="#Event" dst="event"
                let:stream="stream"
                let:time="data.time ? epoch:data.time : .now"
                let:type="data.type or 'text'"
                let:priority="int:data.priority"
                let:title="data.title"
                let:text="data.text"
                let:markup="data.markup"/>
            <db:commit/>

            <if test="data.upload">
                <breakpoint />
                <let-str ext=".jpg"/>
                <str dst="path">${stream.uuid}/${event.uuid}.orig</str>
                <fs:set-contents fs="uploads" path="path" contents="data.image"/>
            </if>

            <tl:notify-stream stream="stream"/>
        </forms:validate>
    </view>

    <view libname="view.timeline" template="stream.html">
        <if test=".url.username">
            <db:get model="moya.auth#User" let:username=".url.username" dst="user"/>
        </if>
        <else>
            <let user=".user"/>
        </else>
        <tl:get-timeline let:user="user" dst="timeline"/>
        <get-url name="timeline" let:username="user.username" dst="watch_url"/>
        <db:query model="#Event" dst="events" maxresults="10"
            filter="#Event.stream.id in timeline.streams" orderby="-time"/>

        <dict dst="config"
            let:events="sub:'timeline-${timeline.id}'"
            let:watcherurl="slashjoin:[.app.settings.watcher_url, watch_url]"
            let:time="events.first.time.epoch">
            <get-url name="jsonrpc_private" dst="rpc_url"/>
        </dict>
    </view>

    <view libname="view.event" template="view_event.html">
        <db:get-required model="#Event" let:uuid=".url.event_id" dst="event"/>
        <let stream="event.stream"/>
    </view>


</moya>
