<moya xmlns="http://moyaproject.com"
      xmlns:rpc="http://moyaproject.com/jsonrpc"
      xmlns:let="http://moyaproject.com/let"
      xmlns:db="http://moyaproject.com/db"
      xmlns:tl="http://willmcgugan.com/timeline">

    <!-- Here's an example JSONRPC interface to get you started. -->

    <!-- Use an enumeration so you can refer to error codes by a label -->
    <enum libname="enum.jsonrpc.errors">
        <value id="1" name="name_too_long">
            This error occurs when you enter a name of more than 10 characters.
        </value>
        <value id="2" name="missing_stream">
            The requested stream does not exist.
        </value>
    </enum>

    <!-- This object creates a view that exposes methods via JSON RPC -->
    <rpc:interface libname="jsonrpc.interface" errors="#enum.jsonrpc.errors">

        <!-- An example of a simple remote method -->
        <rpc:method name="greet" description="Renders a greeting">
            <doc>This method will greet you, using the name of your choice</doc>
            <rpc:parameter name="who" type="string" default="'World'" required="no">
                This parameter should be the name of the person you wish to greet. If not given, the name will default to "World"
            </rpc:parameter>
            <rpc:error code="name_too_long" if="len:who gt 10" data="errortext='What were you thinking?',foo='bar'">
                'who' should be ten characters or less, not '${who}'
            </rpc:error>
            <return-str>Hello, ${who}!</return-str>
        </rpc:method>


        <rpc:method name="new" group="stream" description="create a new anonymous stream">
            <db:create model="#Stream" dst="stream"
                let:ip=".request.client_addr" let:retention="24"/>
            <return-dict let:status="ok" let:uuid="stream.uuid">
                <get-fq-url dst="url" name="stream" let:stream_id="stream.slug or stream.uuid" />
            </return-dict>
        </rpc:method>

        <rpc:method name="add_events" group="stream" description="add event(s) to a stream">
            <rpc:parameter name="stream" type="string" required="yes" />
            <rpc:parameter name="events" type="list" required="yes">A list of streams</rpc:parameter>
            <tl:get-stream id="stream" dst="stream" />
            <catch exception="willmcgugan.timeline.missing.*">
                <rpc:error code="missing_stream"/>
            </catch>
        </rpc:method>

    </rpc:interface>


</moya>

