<?xml version="1.0" encoding="UTF-8"?>
<moya xmlns="http://moyaproject.com"
    xmlns:let="http://moyaproject.com/let"
    xmlns:db="http://moyaproject.com/db"
    xmlns:forms="http://moyaproject.com/forms"
    xmlns:tl="http://willmcgugan.com/timeline"
    xmlns:fs="http://moyaproject.com/fs"
    xmlns:image="http://moyaproject.com/image"
    xmlns:tn="http://moyaproject.com/thumbnail">

 

    <view libname="view.front" template="front.html">

    </view>

    <view libname="view.stream" content="#content.stream">
        <tl:get-stream-required id=".url.stream_id" dst="stream"/>
        <tl:get-timeline dst="timeline" />
        <get-url name="stream" let:stream_id="stream.uuid" dst="watch_url"/>
        <db:query model="#Event" let:stream="stream" maxresults="10" orderby="-added_time" dst="events"/>

        <db:get model="#Subscription" dst="subscription"
            let:stream="stream" let:timeline="timeline"/>
    </view>

    <view libname="view.user.subscriptions" content="#content.user.subscriptions" requires=".user">
        <db:get-required model="moya.auth#User" dst="user"
            let:username=".url.username"/>
        <tl:get-timeline let:user="user" dst="timeline"/>
        <get-url name="user_subscriptions" let:username="user.username" dst="watch_url"/>
        <db:query model="#Event" dst="events" maxresults="10"
            filter="#Event.stream.id in timeline.streams" orderby="-time"/>
        <db:query model="#Subscription" let:timeline="timeline" dst="subscriptions"/>
    </view>

    <view libname="view.user.streams" content="#content.user.streams">
        <db:get-required model="moya.auth#User" dst="owner"
            let:username=".url.username"/>
        <tl:get-timeline let:user="owner" dst="timeline"/>
        <get-url name="user_streams" let:username="owner.username" dst="watch_url"/>
        <db:query model="#Event" dst="events" maxresults="10"
            filter="#Event.stream.user == owner" orderby="-time"/>
    </view>

    <view libname="view.user.stream" content="#content.stream">
        <db:get-required model="moya.auth#User" let:username=".user.username" dst="user"/>
        <tl:get-stream-required user="user" id=".url.stream_slug" dst="stream"/>
        <tl:get-timeline dst="timeline" />

        <get-url name="stream" let:stream_id="stream.uuid" dst="watch_url"/>
        <db:query model="#Event" let:stream="stream" maxresults="10" orderby="-added_time" dst="events"/>

        <db:get model="#Subscription" dst="subscription"
            let:stream="stream" let:timeline="timeline"/>
    </view>

    <view libname="view.stream.upload" content="#content.stream.new_event">

        <forms:get form="#form.event" dst="form" action=".?${.request.query_string}"/>
        <if-post>
            <forms:validate src="form">
                <let data="form.data"/>

                <try>
                    <tl:get-stream id="data.stream" dst="stream" user=".user"/>
                    <db:create model="#Event" dst="event"
                        let:stream="stream"
                        let:time="data.time ? epoch:data.time : .now"
                        let:type="data.type or 'text'"
                        let:priority="int:data.priority"
                        let:title="data.title"
                        let:text="data.text"
                        let:markup="data.markup"
                        let:generator="data.generator"
                        let:insert_seconds="round:[.time, 6]"/>

                    <if test="data.image">
                        <let ext="ext:data.image.filename"/>
                        <str dst="path">${stream.uuid}/${event.uuid}.${ext}</str>
                        <image:get-size file="data.image" dst="size"/>
                        <db:create model="#Image" dst="img"
                            let:event="event"
                            let:path="path"
                            let:filesize="len:data.image"
                            let:width="size.width"
                            let:height="size.height"/>
                        <fs:set-contents fs="uploads" path="${path}" contents="data.image"/>
                        <tn:generate thumbnails="#thumbnails" path="path" />
                    </if>
                    <db:commit/>
                </try>
                <catch exception="*" dst="error">
                    <dict dst="result" let:status="'error'" let:msg="error.msg"/>
                </catch>
                <if test="not result">
                    <tl:notify-stream stream="stream"/>
                    <let new_event="event"/>
                    <dict dst="result" let:status="'ok'">
                       <dict dst="event" let:id="new_event.uuid">
                            <get-fq-url dst="url" name="event" let:event_id="new_event.uuid"/>
                        </dict>
                    </dict>
                </if>

            </forms:validate>
            <if test="not form.ok">
                <dict dst="result" let:status="'fail'" let:msg="'failed to validate'">
                    <let error="form.error"/>
                    <let field_errors="form.errors"/>
                </dict>
            </if>
            <serve-json obj="result" if=".request.GET.format=='json'"/>
        </if-post>
    </view>

    <view libname="view.event" content="#content.event">
        <db:get-required model="#Event" let:uuid=".url.event_id" dst="event"/>
        <get-url name="event" let:event_id="event.uuid" dst="watch_url"/>
        <let stream="event.stream"/>

        <db:query model="#Event" dst="next_events"
            orderby="added_time"
            let:stream="stream" filter="#Event.added_time gt event.added_time"/>
        <db:query model="#Event" dst="previous_events"
            orderby="-added_time"
            let:stream="stream" filter="#Event.added_time lt event.added_time"/>
        <let next_event="next_events.first"
            previous_event="previous_events.first"/>

        <dict dst="config"
            let:page_id="'event-view'"
            let:time="events.first.time.epoch">
            <get-url name="jsonrpc_private" dst="rpc_url"/>
        </dict>
    </view>


</moya>
