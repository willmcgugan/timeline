<?xml version="1.0" encoding="UTF-8"?>
<moya xmlns="http://moyaproject.com"
	xmlns:db="http://moyaproject.com/db"
    xmlns:let="http://moyaproject.com/let"
    xmlns:tl="http://willmcgugan.com/timeline"
    xmlns:soup="http://moyaproject.com/soup">
    <!-- define your tags here -->

    <tag name="get-stream">
    	<doc>Get a stream object from a UUID or slug</doc>
    	<signature>
    		<attribute name="id" type="expression" missing="no">A stream UUID or slug</attribute>
            <attribute name="user" type="expression" missing="no" required="no">A user</attribute>
    	</signature>
    	<if test="id matches /[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}/">
            <db:get model="#Stream" let:uuid="id" dst="stream" />
        </if>
        <else>
            <db:get model="#Stream" let:user="user" let:slug="id" dst="stream" />
        </else>
        <throw exception="willmcgugan.timeline.missing.stream" msg="No stream called '${id}'"
            if="not stream"/>
        <return value="stream"/>
    </tag>

    <tag name="get-stream-required">
        <doc>Get a stream object from a UUID or slug</doc>
        <signature>
            <attribute name="id" type="expression" missing="no">A stream UUID or slug</attribute>
            <attribute name="user" type="expression" missing="no" required="no">A user</attribute>
        </signature>

        <tl:get-stream id="id" user="user" dst="stream"/>
        <not-found if="not stream"/>
        <return value="stream"/>
    </tag>

    <tag name="get-timeline">
        <doc>Get the timeline for logged in user</doc>
        <signature>
            <attribute name="user" type="expression" default=".user">Owner of timeline</attribute>
        </signature>
        <return>
            <db:get-or-create model="#Timeline"
                    let:user="user" let:slug="'default'"/>
        </return>
    </tag>


    <tag name="render-event">
        <doc>Render an event object</doc>
        <signature>
            <attribute name="event" type="expression" missing="no">An #Event object</attribute>
        </signature>
        <str dst="template">event.html</str>
        <return>
            <render-template template="${template}" let:event="event"/>
        </return>
    </tag>

    <tag name="notify-stream">
        <doc>Send notification of stream update</doc>
        <signature>
            <attribute name="stream" type="expression" required="yes" missing="no"/>
        </signature>
        
        <let watch_path="slashjoin:['events', 'stream-' + str:stream.id]"/>
        <tl:notify path="watch_path" action="update-stream"/>

        <db:query columns="#Timeline" filter="#Subscription.stream==stream" dst="timelines"/>
        <for src="timelines" dst="timeline" filter="timeline.user">
            
            <let watch_path="slashjoin:['events', 'timeline-' + str:timeline.id]"/>
            <tl:notify path="watch_path" action="update-stream"/>
        </for>
    </tag>

    <filter name="addpclass" value="markup">
        <doc>Add a class to paragraphs</doc>
        <signature>
            <argument name="class"/>
        </signature>
        <return>
            <soup:strain src="markup" select="p" let:class="class"/>
        </return>
    </filter>

</moya>
